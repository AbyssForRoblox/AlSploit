local LocalPlayer = game.Players.LocalPlayer

local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")

local ScrollingFrame
local AlSploitSpyKit = Instance.new("ScreenGui")

AlSploitSpyKit.Name = "AlSploitSpyKit"
AlSploitSpyKit.Parent = LocalPlayer:WaitForChild("PlayerGui")
AlSploitSpyKit.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
AlSploitSpyKit.ResetOnSpawn = false

local function CreateMainGui()
	local LoadingFrame = Instance.new("ImageLabel")
	local UICorner = Instance.new("UICorner")
	local UIStroke = Instance.new("UIStroke")
	local Title = Instance.new("TextLabel")
	local UITextSizeConstraint = Instance.new("UITextSizeConstraint")
	ScrollingFrame = Instance.new("ScrollingFrame")
	local UIListLayout = Instance.new("UIListLayout")

	LoadingFrame.Name = "LoadingFrame"
	LoadingFrame.Parent = AlSploitSpyKit
	LoadingFrame.BackgroundColor3 = Color3.new(1, 1, 1)
	LoadingFrame.BorderColor3 = Color3.new(0, 0, 0)
	LoadingFrame.BorderSizePixel = 0
	LoadingFrame.Position = UDim2.new(0.203, 0, 0.224, 0)
	LoadingFrame.Size = UDim2.new(0, 0, 0, 0)
	LoadingFrame.Image = "rbxassetid://17100395362"
	LoadingFrame.ScaleType = Enum.ScaleType.Crop
	
	UICorner.Parent = LoadingFrame

	UIStroke.Parent = LoadingFrame
	UIStroke.Thickness = 1
	UIStroke.Color = Color3.new(1, 1, 1)

	Title.Name = "Title"
	Title.Parent = LoadingFrame
	Title.BackgroundColor3 = Color3.new(1, 1, 1)
	Title.BackgroundTransparency = 1
	Title.BorderColor3 = Color3.new(0, 0, 0)
	Title.BorderSizePixel = 0
	Title.Position = UDim2.new(0, 0, 0, 0)
	Title.Size = UDim2.new(1, 0, 0.102, 0)
	Title.Font = Enum.Font.GothamBold
	Title.Text = "Logs"
	Title.TextColor3 = Color3.new(1, 1, 1)
	Title.TextScaled = true
	Title.TextSize = 22
	Title.TextWrapped = true

	UITextSizeConstraint.Parent = Title
	UITextSizeConstraint.MaxTextSize = 22

	ScrollingFrame.Parent = LoadingFrame
	ScrollingFrame.Active = true
	ScrollingFrame.BackgroundColor3 = Color3.new(1, 1, 1)
	ScrollingFrame.BackgroundTransparency = 1
	ScrollingFrame.BorderColor3 = Color3.new(0, 0, 0)
	ScrollingFrame.BorderSizePixel = 0
	ScrollingFrame.Position = UDim2.new(0, 0, 0.150, 0)
	ScrollingFrame.Size = UDim2.new(1, 0, 0.850, 0)
	ScrollingFrame.BottomImage = "rbxassetid://0"
	ScrollingFrame.MidImage = "rbxassetid://0"
	ScrollingFrame.ScrollBarThickness = 10
	ScrollingFrame.TopImage = "rbxassetid://0"
	ScrollingFrame.CanvasSize = UDim2.new(0, 0, 4, 0)

	UIListLayout.Parent = ScrollingFrame
	UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout.Padding = UDim.new(0, 5)

	task.spawn(function()
		local TweenInformation = TweenInfo.new(0.6, Enum.EasingStyle.Sine, Enum.EasingDirection.Out, 0, false, 0)			
		local LoadingFrameTween = TweenService:Create(LoadingFrame, TweenInformation, {Size = UDim2.new(0.595, 0, 0.550, 0)})

		LoadingFrameTween:Play()
	end)

	return ScrollingFrame
end

local function CreateLog(Text)
	local Log = Instance.new("TextLabel")
	local UITextSizeConstraint = Instance.new("UITextSizeConstraint")
	local UIPadding = Instance.new("UIPadding")	

	Log.Name = "Title"
	Log.Parent = ScrollingFrame
	Log.BackgroundColor3 = Color3.new(1, 1, 1)
	Log.BackgroundTransparency = 1
	Log.BorderColor3 = Color3.new(0, 0, 0)
	Log.BorderSizePixel = 0
	Log.Position = UDim2.new(8.710, 0, 0, 0)
	Log.Size = UDim2.new(1, 0, 0.009, 0)
	Log.Font = Enum.Font.GothamBold
	Log.Text = Text
	Log.TextColor3 = Color3.new(1, 1, 1)
	Log.TextScaled = true
	Log.TextSize = 16
	Log.TextWrapped = true
	Log.TextXAlignment = Enum.TextXAlignment.Left

	UITextSizeConstraint.Parent = Log
	UITextSizeConstraint.MaxTextSize = 16

	UIPadding.Parent = Log
	UIPadding.PaddingLeft = UDim.new(0, 20)

	local MouseEntered = false

	task.spawn(function()
		Log.MouseLeave:Connect(function()
			MouseEntered = false
		end)

		Log.MouseEnter:Connect(function()
			MouseEntered = true
		end)

		UserInputService.InputBegan:Connect(function(Input)
			if Input.UserInputType == Enum.UserInputType.MouseButton1 then
				if MouseEntered == true then
					local OldText = Log.Text

					if setclipboard then
						setclipboard(OldText)
					end

					Log.Text = "Copied Text"

					task.wait(1)

					Log.Text = OldText
				end
			end
		end)
	end)
end

task.spawn(function()
	CreateMainGui()

	task.wait(1)

	local Time = os.date("%X")

	local HookMetaMethod = hookmetamethod
	local HookFunction = hookfunction

	task.spawn(function()
		repeat
			task.wait()
			
			restorefunction(hookmetamethod)
			restorefunction(hookfunction)
		until not game	
	end)
	
	task.spawn(function()
		local FunctionDeleterNotified = false
		
		repeat
			task.wait()

			for i, v in next, getgenv() do
				if type(v) == "function" and not string.find(tostring(i), "GrantAccess") and not string.find(tostring(i), "StartUp") and not string.find(tostring(i), "console") and not iscclosure(v) then
					CreateLog("[" .. Time .. "]" .. " The Script You Just Executed Tried Deleting " .. i .. ", This Can Be Dangerous.")
					
					FunctionDeleterNotified = true
				end
			end				
		until FunctionDeleterNotified == true
	end)
	
	task.spawn(function()
		AntiKick = HookMetaMethod(game, "__namecall", function(Player, ...)
			if Player == LocalPlayer and getnamecallmethod():lower() == "kick" then
				CreateLog("[" .. Time .. "]" .. " Tried Kicking, Action Stopped.")
			end

			return AntiKick(Player, ...)
		end)

		CreateLog("[" .. Time .. "]" .. " AntiKick Has Loaded.")
	end)

	task.spawn(function()
		local AntiLogger
		local Request = http_request
		AntiLogger = HookFunction(Request, function(RequestData, ...)
			if RequestData.Body then
				CreateLog("[" .. Time .. "]" .. " HttpRequest Was Spotted, " .. RequestData.Body .. ".")
			end

			if RequestData.Url then
				CreateLog("[" .. Time .. "]" .. " HttpRequest Was Spotted, " .. RequestData.Url .. ".")	
			end

			if RequestData.Url and (string.find(RequestData.Url, "discord") or string.find(RequestData.Url, "webhook") or string.find(RequestData.Url, "ipv6") or string.find(RequestData.Url, "ipv4")) then
				CreateLog("[" .. Time .. "]" .. " Stopped A HttpRequest From Logging, " .. RequestData.Url .. ".")

				RequestData.Url = ""			
			end

			return AntiLogger(RequestData, ...)
		end)
	end)

	task.spawn(function()
		local GetAsync
		local Request = HttpService.GetAsync

		GetAsync = HookFunction(Request, function(RequestData, ...)
			CreateLog("[" .. Time .. "]" .. " GetAsync Was Spotted, " .. ... .. ".")

			return GetAsync(RequestData, ...)
		end)
	end)

	task.spawn(function()
		local PostAsync
		local Request = HttpService.PostAsync

		PostAsync = HookFunction(Request, function(RequestData, ...)
			CreateLog("[" .. Time .. "]" .. " PostAsync Was Spotted, " .. ... .. ".")

			return PostAsync(RequestData, ...)
		end)
	end)

	task.spawn(function()
		local RequestAsync
		local Request = HttpService.RequestAsync

		RequestAsync = HookFunction(Request, function(RequestData, ...)
			CreateLog("[" .. Time .. "]" .. " RequestAsync Was Spotted, " .. ... .. ".")

			return RequestAsync(RequestData, ...)
		end)
	end)
end)
