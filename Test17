local LocalPlayer = game.Players.LocalPlayer

local HttpService = game:GetService("HttpService")

local AlSploitPrivateGui = Instance.new("ScreenGui")
local ContainerFrame = Instance.new("Frame")
local UIListLayout = Instance.new("UIListLayout")

AlSploitPrivateGui.Name = "AlSploitPrivateGui"
AlSploitPrivateGui.ResetOnSpawn = false
AlSploitPrivateGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
AlSploitPrivateGui.Parent = LocalPlayer.PlayerGui

ContainerFrame.Name = "ContainerFrame"
ContainerFrame.Size = UDim2.new(1, 0, 1, 0)
ContainerFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
ContainerFrame.BackgroundTransparency = 1
ContainerFrame.Position = UDim2.new(0, 0, 0.001, 0)
ContainerFrame.BorderSizePixel = 0
ContainerFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ContainerFrame.Parent = AlSploitPrivateGui

UIListLayout.Name = "UIListLayout"
UIListLayout.Padding = UDim.new(0, 50)
UIListLayout.FillDirection = Enum.FillDirection.Horizontal
UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Top
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout.Parent = ContainerFrame

local LibrarySettings = {}
local SaveSettings = {}

task.spawn(function()
	task.spawn(function()
		if isfile("AlSploitPrivate/AlSploitTest1") then
			local SettingsFile = readfile("AlSploitPrivate/AlSploitTest1")
			local JSONDecode = HttpService:JSONDecode(SettingsFile)

			LibrarySettings = JSONDecode
		end
	end)
	
	task.spawn(function()
		if not isfile("AlSploitPrivate") then
			makefolder("AlSploitPrivate")
		end
	end)
	
	task.spawn(function()
		if not isfile("AlSploitPrivate/AlSploitTest1") then			
			local JSONEncode = HttpService:JSONEncode(SaveSettings)

			writefile("AlSploitPrivate/AlSploitTest1", JSONEncode)
		end
	end)
end)

task.spawn(function()
	repeat
		task.wait(1)
		
		SaveSettings = LibrarySettings
		
		local JSONEncode = HttpService:JSONEncode(SaveSettings)
		
		writefile("AlSploitPrivate/AlSploitTest1", JSONEncode)
	until not game
end)

local function CreateTab(Name)
	local Tab = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local CornerFix = Instance.new("Frame")
	local ModulesContainer = Instance.new("Frame")
	local UIListLayout = Instance.new("UIListLayout")
	local Title = Instance.new("TextLabel")
	local UITextSizeConstraint = Instance.new("UITextSizeConstraint")

	Tab.Name = "Tab"
	Tab.Size = UDim2.new(0.133001611, 0, 0.0494534969, 0)
	Tab.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Tab.Position = UDim2.new(0.429183125, 0, 0, 0)
	Tab.BorderSizePixel = 0
	Tab.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Tab.Parent = ContainerFrame
	
	UICorner.Name = "UICorner"
	UICorner.Parent = Tab
	
	CornerFix.Name = "CornerFix"
	CornerFix.Size = UDim2.new(1.00000036, 0, 0.629474342, 0)
	CornerFix.BorderColor3 = Color3.fromRGB(0, 0, 0)
	CornerFix.Position = UDim2.new(-3.04718043e-07, 0, 0.370526046, 0)
	CornerFix.BorderSizePixel = 0
	CornerFix.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	CornerFix.Parent = Tab

	ModulesContainer.Name = "ModulesContainer"
	ModulesContainer.Size = UDim2.new(1, 0, 21.4285717, 0)
	ModulesContainer.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ModulesContainer.BackgroundTransparency = 1
	ModulesContainer.Position = UDim2.new(0, 0, 1, 0)
	ModulesContainer.BorderSizePixel = 0
	ModulesContainer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ModulesContainer.Parent = Tab

	UIListLayout.Name = "UIListLayout"
	UIListLayout.FillDirection = Enum.FillDirection.Vertical
	UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Top
	UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	UIListLayout.Parent = ModulesContainer
	
	Title.Name = "Title"
	Title.Size = UDim2.new(1.00000024, 0, 1, 0)
	Title.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Title.BackgroundTransparency = 1
	Title.Position = UDim2.new(-3.04718043e-07, 0, 0, 0)
	Title.BorderSizePixel = 0
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.TextColor3 = Color3.fromRGB(255, 255, 255)
	Title.Text = Name
	Title.TextWrapped = true
	Title.TextSize = 20
	Title.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
	Title.TextScaled = true
	Title.Parent = Tab
	
	UITextSizeConstraint.Name = "UITextSizeConstraint"
	UITextSizeConstraint.MaxTextSize = 20
	UITextSizeConstraint.Parent = Title
	
	return ModulesContainer
end

local function CreateToggle(Name, Parent, CallBack)
	local Toggle = Instance.new("TextButton")
	local UIPadding = Instance.new("UIPadding")
	local UITextSizeConstraint = Instance.new("UITextSizeConstraint")
	local DropDownButton = Instance.new("ImageButton")
	
	task.spawn(function()
		if not LibrarySettings[Name] then
			LibrarySettings[Name] = {Value = false, KeyBind = "None"}
		end
	end)
	
	local CurrenToggleValue = {Value = LibrarySettings[Name].Value, Keybind = LibrarySettings[Name].KeyBind}
	
	local function ToggleCallBack()
		CurrenToggleValue.Value =  not CurrenToggleValue.Value
		
		LibrarySettings[Name].Value = CurrenToggleValue.Value
		
		task.spawn(function()
			if CurrenToggleValue.Value == true then
				Toggle.BackgroundColor3 = Color3.new(0, 0.6, 1)
				
				CallBack(true)
			end
		end)
		
		task.spawn(function()
			if CurrenToggleValue.Value == false then
				Toggle.BackgroundColor3 = Color3.new(0.101961, 0.0980392, 0.101961)
				
				CallBack(false)
			end
		end)
	end
	
	Toggle.Name = "Toggle"
	Toggle.Size = UDim2.new(1, 0, 0.0410000011, 0)
	Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Toggle.Position = UDim2.new(2.87291044e-07, 0, 0, 0)
	Toggle.BorderSizePixel = 0
	Toggle.BackgroundTransparency = 0.1
	Toggle.BackgroundColor3 = (CurrenToggleValue.Value == true and Color3.new(0, 0.6, 1) or Color3.new(0.101961, 0.0980392, 0.101961))
	Toggle.AutoButtonColor = false
	Toggle.TextDirection = Enum.TextDirection.LeftToRight
	Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
	Toggle.Text = Name
	Toggle.TextXAlignment = Enum.TextXAlignment.Left
	Toggle.TextWrapped = true
	Toggle.TextSize = 14
	Toggle.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal)
	Toggle.TextScaled = true
	Toggle.Parent = Parent

	DropDownButton.Name = "DropDownButton"
	DropDownButton.Size = UDim2.new(0.128, 0, 0.675, 0)
	DropDownButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
	DropDownButton.Rotation = 90
	DropDownButton.BackgroundTransparency = 1
	DropDownButton.Position = UDim2.new(0.817077041, 0, 0.175759763, 0)
	DropDownButton.BorderSizePixel = 0
	DropDownButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	DropDownButton.HoverImage = "http://www.roblox.com/asset/?id=12809025337"
	DropDownButton.Image = "http://www.roblox.com/asset/?id=12809025337"
	DropDownButton.Parent = Toggle

	UIPadding.Name = "UIPadding"
	UIPadding.PaddingLeft = UDim.new(0, 15)
	UIPadding.Parent = Toggle

	UITextSizeConstraint.Name = "UITextSizeConstraint"
	UITextSizeConstraint.MaxTextSize = 14
	UITextSizeConstraint.Parent = Toggle
	
	task.spawn(function()
		Toggle.Activated:Connect(function()
			ToggleCallBack()
		end)
	end)
end

local CombatTab = CreateTab("Combat")
local BlatantTab = CreateTab("Blatant")
local UtilityTab = CreateTab("Utility")
local WorldTab = CreateTab("World")
local GuiTab = CreateTab("Gui")

task.spawn(function()
	local ProjectileAura = CreateToggle("ProjectileAura", CombatTab, function(CallBack)

	end)
end)

task.spawn(function()
	local AutoClicker = CreateToggle("AutoClicker", CombatTab, function(CallBack)

	end)
end)

task.spawn(function()
	local AimAssist = CreateToggle("AimAssist", CombatTab, function(CallBack)

	end)
end)

task.spawn(function()
	local KillAura = CreateToggle("KillAura", CombatTab, function(CallBack)
		
	end)
end)

function stfu()
local MiniToggle = Instance.new("TextLabel")
local UIPadding_2 = Instance.new("UIPadding")
local ToggleContainer = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local Toggle_4 = Instance.new("TextButton")
local UICorner_2 = Instance.new("UICorner")
local UITextSizeConstraint_2 = Instance.new("UITextSizeConstraint")
local UITextSizeConstraint_3 = Instance.new("UITextSizeConstraint")
local KeyBind = Instance.new("TextButton")
local UIPadding_3 = Instance.new("UIPadding")
local UITextSizeConstraint_4 = Instance.new("UITextSizeConstraint")
local Slider = Instance.new("Frame")
local SliderFrame = Instance.new("Frame")
local Fill = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local Bar = Instance.new("TextButton")
local UICorner_4 = Instance.new("UICorner")
local UIStroke = Instance.new("UIStroke")
local NameDisplay = Instance.new("TextLabel")
local ValueDisplay = Instance.new("TextLabel")

MiniToggle.Name = "MiniToggle"
MiniToggle.Size = UDim2.new(1, 0, 0.0410000011, 0)
MiniToggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
MiniToggle.BackgroundTransparency = 0.1000000596046448
MiniToggle.Position = UDim2.new(-0.00499250041, 0, 0.0410000049, 0)
MiniToggle.BorderSizePixel = 0
MiniToggle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
MiniToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
MiniToggle.Text = "CustomAnimation"
MiniToggle.TextXAlignment = Enum.TextXAlignment.Left
MiniToggle.TextWrapped = true
MiniToggle.TextSize = 13
MiniToggle.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal)
MiniToggle.TextScaled = true
MiniToggle.Parent = ModulesContainer

UIPadding_2.Name = "UIPadding"
UIPadding_2.PaddingLeft = UDim.new(0, 15)
UIPadding_2.Parent = MiniToggle

ToggleContainer.Name = "ToggleContainer"
ToggleContainer.Size = UDim2.new(0.165000007, 0, 0.441000015, 0)
ToggleContainer.BorderColor3 = Color3.fromRGB(0, 0, 0)
ToggleContainer.Position = UDim2.new(0.774545193, 0, 0.259777784, 0)
ToggleContainer.BorderSizePixel = 0
ToggleContainer.BackgroundColor3 = Color3.fromRGB(0, 153, 255)
ToggleContainer.Parent = MiniToggle

UICorner.Name = "UICorner"
UICorner.CornerRadius = UDim.new(0, 30)
UICorner.Parent = ToggleContainer

Toggle_4.Name = "Toggle"
Toggle_4.Size = UDim2.new(0.466837883, 0, 0.935671091, 0)
Toggle_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toggle_4.Position = UDim2.new(0.0500000007, 0, 0.0590000004, 0)
Toggle_4.BorderSizePixel = 0
Toggle_4.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Toggle_4.AutoButtonColor = false
Toggle_4.TextColor3 = Color3.fromRGB(0, 0, 0)
Toggle_4.Text = ""
Toggle_4.TextWrapped = true
Toggle_4.TextSize = 14
Toggle_4.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
Toggle_4.TextScaled = true
Toggle_4.Parent = ToggleContainer

UICorner_2.Name = "UICorner"
UICorner_2.CornerRadius = UDim.new(1, 0)
UICorner_2.Parent = Toggle_4

UITextSizeConstraint_2.Name = "UITextSizeConstraint"
UITextSizeConstraint_2.MaxTextSize = 14
UITextSizeConstraint_2.Parent = Toggle_4

UITextSizeConstraint_3.Name = "UITextSizeConstraint"
UITextSizeConstraint_3.MaxTextSize = 13
UITextSizeConstraint_3.Parent = MiniToggle

KeyBind.Name = "KeyBind"
KeyBind.Size = UDim2.new(1, 0, 0.0350000001, 0)
KeyBind.BorderColor3 = Color3.fromRGB(0, 0, 0)
KeyBind.BackgroundTransparency = 0.1000000596046448
KeyBind.Position = UDim2.new(0, 0, 0.0820000097, 0)
KeyBind.BorderSizePixel = 0
KeyBind.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
KeyBind.AutoButtonColor = false
KeyBind.TextDirection = Enum.TextDirection.LeftToRight
KeyBind.TextColor3 = Color3.fromRGB(255, 255, 255)
KeyBind.Text = "KeyBind: Z"
KeyBind.TextXAlignment = Enum.TextXAlignment.Left
KeyBind.TextWrapped = true
KeyBind.TextSize = 13
KeyBind.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal)
KeyBind.TextScaled = true
KeyBind.Parent = ModulesContainer

UIPadding_3.Name = "UIPadding"
UIPadding_3.PaddingLeft = UDim.new(0, 15)
UIPadding_3.Parent = KeyBind

UITextSizeConstraint_4.Name = "UITextSizeConstraint"
UITextSizeConstraint_4.MaxTextSize = 13
UITextSizeConstraint_4.Parent = KeyBind

Slider.Name = "Slider"
Slider.Size = UDim2.new(0.99999994, 0, 0.064184837, 0)
Slider.BorderColor3 = Color3.fromRGB(0, 0, 0)
Slider.BackgroundTransparency = 0.1000000596046448
Slider.Position = UDim2.new(0, 0, 0.117000006, 0)
Slider.BorderSizePixel = 0
Slider.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Slider.Parent = ModulesContainer

SliderFrame.Name = "SliderFrame"
SliderFrame.Size = UDim2.new(0.699999928, 0, 0.0599999987, 0)
SliderFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
SliderFrame.BackgroundTransparency = 1
SliderFrame.Position = UDim2.new(0.150000215, 0, 0.654259622, 0)
SliderFrame.BorderSizePixel = 0
SliderFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SliderFrame.Parent = Slider

Fill.Name = "Fill"
Fill.Size = UDim2.new(1, 0, 1, 0)
Fill.BorderColor3 = Color3.fromRGB(0, 0, 0)
Fill.Position = UDim2.new(0, 0, -0.328999996, 0)
Fill.BorderSizePixel = 0
Fill.BackgroundColor3 = Color3.fromRGB(0, 153, 255)
Fill.Parent = SliderFrame

UICorner_3.Name = "UICorner"
UICorner_3.CornerRadius = UDim.new(1, 0)
UICorner_3.Parent = Fill

Bar.Name = "Bar"
Bar.ZIndex = 2
Bar.Size = UDim2.new(0.0839999989, 0, 3.5, 0)
Bar.BorderColor3 = Color3.fromRGB(0, 0, 0)
Bar.Position = UDim2.new(0.185000002, 0, -1.5, 0)
Bar.BorderSizePixel = 0
Bar.BackgroundColor3 = Color3.fromRGB(0, 153, 255)
Bar.AutoButtonColor = false
Bar.TextColor3 = Color3.fromRGB(0, 0, 0)
Bar.Text = ""
Bar.TextSize = 14
Bar.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal)
Bar.Parent = SliderFrame

UICorner_4.Name = "UICorner"
UICorner_4.CornerRadius = UDim.new(1, 0)
UICorner_4.Parent = Bar

UIStroke.Name = "UIStroke"
UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke.Parent = Bar

NameDisplay.Name = "NameDisplay"
NameDisplay.Size = UDim2.new(0.249625042, 0, 0.543312311, 0)
NameDisplay.BorderColor3 = Color3.fromRGB(0, 0, 0)
NameDisplay.BackgroundTransparency = 1
NameDisplay.Position = UDim2.new(0.145293236, 0, -0.00938985683, 0)
NameDisplay.BorderSizePixel = 0
NameDisplay.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
NameDisplay.TextColor3 = Color3.fromRGB(255, 255, 255)
NameDisplay.Text = "Range"
NameDisplay.TextSize = 10
NameDisplay.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal)
NameDisplay.Parent = Slider

ValueDisplay.Name = "ValueDisplay"
ValueDisplay.Size = UDim2.new(0.249625042, 0, 0.543312311, 0)
ValueDisplay.BorderColor3 = Color3.fromRGB(0, 0, 0)
ValueDisplay.BackgroundTransparency = 1
ValueDisplay.Position = UDim2.new(0.634818852, 0, -0.00938985683, 0)
ValueDisplay.BorderSizePixel = 0
ValueDisplay.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ValueDisplay.TextColor3 = Color3.fromRGB(255, 255, 255)
ValueDisplay.Text = "18"
ValueDisplay.TextSize = 10
ValueDisplay.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Medium, Enum.FontStyle.Normal)
ValueDisplay.Parent = Slider
end
